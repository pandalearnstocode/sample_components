[tool.poetry]
name = "sample_components"
version = "0.0.1"
description = ""
authors = ["Aritra Biswas <40533894+pandalearnstocode@users.noreply.github.com>"]
readme = "README.md"
packages = [{include = "sample_components"}]

[tool.poetry.dependencies]
python = "^3.8"
pytest = "^7.1.3"
jupyter = "^1.0.0"
notebook = "^6.5.1"
ipykernel = "^6.16.1"
pytest-cov = "^4.0.0"
coverage = "^6.5.0"
black = "^22.10.0"
isort = "^5.10.1"
mypy = "^0.982"
bandit = "^1.7.4"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ["py38"]
line-length = 120
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
py_version = 38
line_length = 120
known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true


[tool.mypy]
enable_error_code = [
    "ignore-without-code"
]
python_version = 3.8
pretty = true
show_traceback = true
color_output = true
allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "sample_components"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true

[tool.bandit]
targets = "sample_components"
exclude = ".venv"